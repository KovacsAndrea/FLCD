N = { PROGRAM DECLARATION_LIST STMT_LIST DECLARATION EQUAL_EXPRESSION VAR_TYPE EXPRESSION SIGN SIGN_AND_EXPRESSION TERM STMT SIMPLE_STMT STRUCT_STMT ASSIGN_STMT IO_STMT IF_STMT ELSE_STMT WHILE_STMT CONDITION RELATION }
E = { : INTEGER CHAR STRING = + - * / % READ WRITE ( ) DO DONE " ' == != < > <= >= IF ELSE WHILE IDENTIFIER CONSTANT }
S = PROGRAM
P = {
    PROGRAM -> DECLARATION_LIST STMT_LIST
    DECLARATION_LIST -> DECLARATION DECLARATION_LIST | EPSILON
    DECLARATION -> VAR_TYPE IDENTIFIER EQUAL_EXPRESSION
    EQUAL_EXPRESSION -> = EXPRESSION | EPSILON
    VAR_TYPE -> INTEGER | CHAR | STRING
    EXPRESSION -> TERM SIGN_AND_EXPRESSION
    SIGN_AND_EXPRESSION -> SIGN EXPRESSION | EPSILON
    SIGN -> + | - | * | / | %
    TERM -> IDENTIFIER | CONSTANT
    STMT_LIST -> STMT STMT_LIST | EPSILON
    STMT -> SIMPLE_STMT | STRUCT_STMT
    SIMPLE_STMT -> ASSIGN_STMT | IO_STMT
    STRUCT_STMT -> IF_STMT | WHILE_STMT
    ASSIGN_STMT -> IDENTIFIER = EXPRESSION
    IO_STMT -> READ ( TERM ) | WRITE ( TERM )
    IF_STMT -> IF ( CONDITION ) STMT_LIST ELSE_STMT
    ELSE_STMT -> ELSE DO : STMT_LIST DONE | EPSILON
    WHILE_STMT -> WHILE ( CONDITION ) DO : STMT_LIST DONE
    CONDITION -> EXPRESSION RELATION EXPRESSION
    RELATION -> == | != | < | > | <= | >=
}